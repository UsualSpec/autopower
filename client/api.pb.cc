// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api.proto

#include "api.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace autopapi {

inline constexpr srvRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        clientuid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        requestbody_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        msgtype_{static_cast< ::autopapi::srvRequestType >(0)},
        requestno_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR srvRequest::srvRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct srvRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR srvRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~srvRequestDefaultTypeInternal() {}
  union {
    srvRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 srvRequestDefaultTypeInternal _srvRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR nothing::nothing(::_pbi::ConstantInitialized) {}
struct nothingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR nothingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~nothingDefaultTypeInternal() {}
  union {
    nothing _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 nothingDefaultTypeInternal _nothing_default_instance_;

inline constexpr msmtSettings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : clientuid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ppdevice_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ppsamplinginterval_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        uploadintervalmin_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR msmtSettings::msmtSettings(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct msmtSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR msmtSettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~msmtSettingsDefaultTypeInternal() {}
  union {
    msmtSettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 msmtSettingsDefaultTypeInternal _msmtSettings_default_instance_;

inline constexpr msmtName::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : clientuid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR msmtName::msmtName(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct msmtNameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR msmtNameDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~msmtNameDefaultTypeInternal() {}
  union {
    msmtName _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 msmtNameDefaultTypeInternal _msmtName_default_instance_;

inline constexpr cmMCode::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : clientuid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        msg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        statuscode_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR cmMCode::cmMCode(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct cmMCodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR cmMCodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~cmMCodeDefaultTypeInternal() {}
  union {
    cmMCode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 cmMCodeDefaultTypeInternal _cmMCode_default_instance_;

inline constexpr clientUid::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR clientUid::clientUid(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct clientUidDefaultTypeInternal {
  PROTOBUF_CONSTEXPR clientUidDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~clientUidDefaultTypeInternal() {}
  union {
    clientUid _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 clientUidDefaultTypeInternal _clientUid_default_instance_;

inline constexpr clientResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        clientuid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        msg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        statuscode_{0u},
        msgtype_{static_cast< ::autopapi::clientResponseType >(0)},
        requestno_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR clientResponse::clientResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct clientResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR clientResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~clientResponseDefaultTypeInternal() {}
  union {
    clientResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 clientResponseDefaultTypeInternal _clientResponse_default_instance_;

inline constexpr msmtSample::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        clientuid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        msmtid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        msmttime_{nullptr},
        msmtcontent_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR msmtSample::msmtSample(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct msmtSampleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR msmtSampleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~msmtSampleDefaultTypeInternal() {}
  union {
    msmtSample _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 msmtSampleDefaultTypeInternal _msmtSample_default_instance_;
}  // namespace autopapi
static ::_pb::Metadata file_level_metadata_api_2eproto[8];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_api_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_api_2eproto = nullptr;
const ::uint32_t TableStruct_api_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::autopapi::nothing, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::autopapi::cmMCode, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::autopapi::cmMCode, _impl_.clientuid_),
    PROTOBUF_FIELD_OFFSET(::autopapi::cmMCode, _impl_.statuscode_),
    PROTOBUF_FIELD_OFFSET(::autopapi::cmMCode, _impl_.msg_),
    PROTOBUF_FIELD_OFFSET(::autopapi::srvRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::autopapi::srvRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::autopapi::srvRequest, _impl_.clientuid_),
    PROTOBUF_FIELD_OFFSET(::autopapi::srvRequest, _impl_.msgtype_),
    PROTOBUF_FIELD_OFFSET(::autopapi::srvRequest, _impl_.requestbody_),
    PROTOBUF_FIELD_OFFSET(::autopapi::srvRequest, _impl_.requestno_),
    ~0u,
    ~0u,
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::autopapi::clientResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::autopapi::clientResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::autopapi::clientResponse, _impl_.clientuid_),
    PROTOBUF_FIELD_OFFSET(::autopapi::clientResponse, _impl_.statuscode_),
    PROTOBUF_FIELD_OFFSET(::autopapi::clientResponse, _impl_.msgtype_),
    PROTOBUF_FIELD_OFFSET(::autopapi::clientResponse, _impl_.msg_),
    PROTOBUF_FIELD_OFFSET(::autopapi::clientResponse, _impl_.requestno_),
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::autopapi::clientUid, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::autopapi::clientUid, _impl_.uid_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::autopapi::msmtSettings, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::autopapi::msmtSettings, _impl_.clientuid_),
    PROTOBUF_FIELD_OFFSET(::autopapi::msmtSettings, _impl_.ppdevice_),
    PROTOBUF_FIELD_OFFSET(::autopapi::msmtSettings, _impl_.ppsamplinginterval_),
    PROTOBUF_FIELD_OFFSET(::autopapi::msmtSettings, _impl_.uploadintervalmin_),
    PROTOBUF_FIELD_OFFSET(::autopapi::msmtSample, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::autopapi::msmtSample, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::autopapi::msmtSample, _impl_.clientuid_),
    PROTOBUF_FIELD_OFFSET(::autopapi::msmtSample, _impl_.msmtid_),
    PROTOBUF_FIELD_OFFSET(::autopapi::msmtSample, _impl_.msmttime_),
    PROTOBUF_FIELD_OFFSET(::autopapi::msmtSample, _impl_.msmtcontent_),
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::autopapi::msmtName, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::autopapi::msmtName, _impl_.clientuid_),
    PROTOBUF_FIELD_OFFSET(::autopapi::msmtName, _impl_.name_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::autopapi::nothing)},
        {8, -1, -1, sizeof(::autopapi::cmMCode)},
        {19, 31, -1, sizeof(::autopapi::srvRequest)},
        {35, 48, -1, sizeof(::autopapi::clientResponse)},
        {53, -1, -1, sizeof(::autopapi::clientUid)},
        {62, -1, -1, sizeof(::autopapi::msmtSettings)},
        {74, 86, -1, sizeof(::autopapi::msmtSample)},
        {90, -1, -1, sizeof(::autopapi::msmtName)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::autopapi::_nothing_default_instance_._instance,
    &::autopapi::_cmMCode_default_instance_._instance,
    &::autopapi::_srvRequest_default_instance_._instance,
    &::autopapi::_clientResponse_default_instance_._instance,
    &::autopapi::_clientUid_default_instance_._instance,
    &::autopapi::_msmtSettings_default_instance_._instance,
    &::autopapi::_msmtSample_default_instance_._instance,
    &::autopapi::_msmtName_default_instance_._instance,
};
const char descriptor_table_protodef_api_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\tapi.proto\022\010autopapi\032\037google/protobuf/t"
    "imestamp.proto\"\t\n\007nothing\"=\n\007cmMCode\022\021\n\t"
    "clientUid\030\001 \001(\t\022\022\n\nstatusCode\030\002 \001(\r\022\013\n\003m"
    "sg\030\003 \001(\t\"\207\001\n\nsrvRequest\022\021\n\tclientUid\030\001 \001"
    "(\t\022)\n\007msgType\030\002 \001(\0162\030.autopapi.srvReques"
    "tType\022\030\n\013requestBody\030\003 \001(\tH\000\210\001\001\022\021\n\treque"
    "stNo\030\004 \001(\rB\016\n\014_requestBody\"\223\001\n\016clientRes"
    "ponse\022\021\n\tclientUid\030\001 \001(\t\022\022\n\nstatusCode\030\002"
    " \001(\r\022-\n\007msgType\030\003 \001(\0162\034.autopapi.clientR"
    "esponseType\022\020\n\003msg\030\004 \001(\tH\000\210\001\001\022\021\n\trequest"
    "No\030\005 \001(\rB\006\n\004_msg\"\030\n\tclientUid\022\013\n\003uid\030\001 \001"
    "(\t\"j\n\014msmtSettings\022\021\n\tclientUid\030\001 \001(\t\022\020\n"
    "\010ppDevice\030\003 \001(\t\022\032\n\022ppSamplingInterval\030\004 "
    "\001(\t\022\031\n\021uploadIntervalMin\030\005 \001(\r\"r\n\nmsmtSa"
    "mple\022\021\n\tclientUid\030\001 \001(\t\022\016\n\006msmtId\030\002 \001(\t\022"
    ",\n\010msmtTime\030\003 \001(\0132\032.google.protobuf.Time"
    "stamp\022\023\n\013msmtContent\030\004 \001(\r\"+\n\010msmtName\022\021"
    "\n\tclientUid\030\001 \001(\t\022\014\n\004name\030\002 \001(\t*\257\001\n\016srvR"
    "equestType\022\024\n\020INTRODUCE_SERVER\020\000\022\025\n\021STAR"
    "T_MEASUREMENT\020\001\022\024\n\020STOP_MEASUREMENT\020\002\022\034\n"
    "\030REQUEST_MEASUREMENT_LIST\020\003\022\034\n\030REQUEST_M"
    "EASUREMENT_DATA\020\004\022\036\n\032REQUEST_MEASUREMENT"
    "_STATUS\020\005*\315\001\n\022clientResponseType\022\024\n\020INTR"
    "ODUCE_CLIENT\020\000\022 \n\034STARTED_MEASUREMENT_RE"
    "SPONSE\020\001\022 \n\034STOPPED_MEASUREMENT_RESPONSE"
    "\020\002\022\035\n\031MEASUREMENT_LIST_RESPONSE\020\003\022\035\n\031MEA"
    "SUREMENT_DATA_RESPONSE\020\004\022\037\n\033MEASUREMENT_"
    "STATUS_RESPONSE\020\0052\233\005\n\017CMeasurementApi\022\?\n"
    "\016registerClient\022\023.autopapi.clientUid\032\024.a"
    "utopapi.srvRequest\"\0000\001\022B\n\021putClientRespo"
    "nse\022\030.autopapi.clientResponse\032\021.autopapi"
    ".nothing\"\000\022\?\n\022putMeasurementList\022\022.autop"
    "api.msmtName\032\021.autopapi.nothing\"\000(\001\022=\n\016p"
    "utMeasurement\022\024.autopapi.msmtSample\032\021.au"
    "topapi.nothing\"\000(\001\022F\n\025getMsmtSttngsAndSt"
    "art\022\023.autopapi.clientUid\032\026.autopapi.msmt"
    "Settings\"\000\0226\n\014putStatusMsg\022\021.autopapi.cm"
    "MCode\032\021.autopapi.nothing\"\000\022@\n\022getLoggedI"
    "nClients\022\021.autopapi.nothing\032\023.autopapi.c"
    "lientUid\"\0000\001\022=\n\016setMsmtSttings\022\026.autopap"
    "i.msmtSettings\032\021.autopapi.nothing\"\000\022H\n\024i"
    "ssueRequestToClient\022\024.autopapi.srvReques"
    "t\032\030.autopapi.clientResponse\"\000\0228\n\016getNext"
    "Message\022\021.autopapi.nothing\032\021.autopapi.cm"
    "MCode\"\000b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_api_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_api_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_api_2eproto = {
    false,
    false,
    1775,
    descriptor_table_protodef_api_2eproto,
    "api.proto",
    &descriptor_table_api_2eproto_once,
    descriptor_table_api_2eproto_deps,
    1,
    8,
    schemas,
    file_default_instances,
    TableStruct_api_2eproto::offsets,
    file_level_metadata_api_2eproto,
    file_level_enum_descriptors_api_2eproto,
    file_level_service_descriptors_api_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_api_2eproto_getter() {
  return &descriptor_table_api_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_api_2eproto(&descriptor_table_api_2eproto);
namespace autopapi {
const ::google::protobuf::EnumDescriptor* srvRequestType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_api_2eproto);
  return file_level_enum_descriptors_api_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t srvRequestType_internal_data_[] = {
    393216u, 0u, };
bool srvRequestType_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* clientResponseType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_api_2eproto);
  return file_level_enum_descriptors_api_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t clientResponseType_internal_data_[] = {
    393216u, 0u, };
bool clientResponseType_IsValid(int value) {
  return 0 <= value && value <= 5;
}
// ===================================================================

class nothing::_Internal {
 public:
};

nothing::nothing(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:autopapi.nothing)
}
nothing::nothing(
    ::google::protobuf::Arena* arena,
    const nothing& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  nothing* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:autopapi.nothing)
}









::google::protobuf::Metadata nothing::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[0]);
}
// ===================================================================

class cmMCode::_Internal {
 public:
};

cmMCode::cmMCode(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:autopapi.cmMCode)
}
inline PROTOBUF_NDEBUG_INLINE cmMCode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : clientuid_(arena, from.clientuid_),
        msg_(arena, from.msg_),
        _cached_size_{0} {}

cmMCode::cmMCode(
    ::google::protobuf::Arena* arena,
    const cmMCode& from)
    : ::google::protobuf::Message(arena) {
  cmMCode* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.statuscode_ = from._impl_.statuscode_;

  // @@protoc_insertion_point(copy_constructor:autopapi.cmMCode)
}
inline PROTOBUF_NDEBUG_INLINE cmMCode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : clientuid_(arena),
        msg_(arena),
        _cached_size_{0} {}

inline void cmMCode::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.statuscode_ = {};
}
cmMCode::~cmMCode() {
  // @@protoc_insertion_point(destructor:autopapi.cmMCode)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void cmMCode::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.clientuid_.Destroy();
  _impl_.msg_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void cmMCode::Clear() {
// @@protoc_insertion_point(message_clear_start:autopapi.cmMCode)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.clientuid_.ClearToEmpty();
  _impl_.msg_.ClearToEmpty();
  _impl_.statuscode_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* cmMCode::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 37, 2> cmMCode::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_cmMCode_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string clientUid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(cmMCode, _impl_.clientuid_)}},
    // uint32 statusCode = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(cmMCode, _impl_.statuscode_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(cmMCode, _impl_.statuscode_)}},
    // string msg = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(cmMCode, _impl_.msg_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string clientUid = 1;
    {PROTOBUF_FIELD_OFFSET(cmMCode, _impl_.clientuid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 statusCode = 2;
    {PROTOBUF_FIELD_OFFSET(cmMCode, _impl_.statuscode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string msg = 3;
    {PROTOBUF_FIELD_OFFSET(cmMCode, _impl_.msg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\20\11\0\3\0\0\0\0"
    "autopapi.cmMCode"
    "clientUid"
    "msg"
  }},
};

::uint8_t* cmMCode::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:autopapi.cmMCode)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string clientUid = 1;
  if (!this->_internal_clientuid().empty()) {
    const std::string& _s = this->_internal_clientuid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "autopapi.cmMCode.clientUid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint32 statusCode = 2;
  if (this->_internal_statuscode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_statuscode(), target);
  }

  // string msg = 3;
  if (!this->_internal_msg().empty()) {
    const std::string& _s = this->_internal_msg();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "autopapi.cmMCode.msg");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autopapi.cmMCode)
  return target;
}

::size_t cmMCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autopapi.cmMCode)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string clientUid = 1;
  if (!this->_internal_clientuid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_clientuid());
  }

  // string msg = 3;
  if (!this->_internal_msg().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_msg());
  }

  // uint32 statusCode = 2;
  if (this->_internal_statuscode() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_statuscode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData cmMCode::_class_data_ = {
    cmMCode::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* cmMCode::GetClassData() const {
  return &_class_data_;
}

void cmMCode::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<cmMCode*>(&to_msg);
  auto& from = static_cast<const cmMCode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:autopapi.cmMCode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_clientuid().empty()) {
    _this->_internal_set_clientuid(from._internal_clientuid());
  }
  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  if (from._internal_statuscode() != 0) {
    _this->_internal_set_statuscode(from._internal_statuscode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void cmMCode::CopyFrom(const cmMCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autopapi.cmMCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool cmMCode::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* cmMCode::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void cmMCode::InternalSwap(cmMCode* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.clientuid_, &other->_impl_.clientuid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_, &other->_impl_.msg_, arena);
        swap(_impl_.statuscode_, other->_impl_.statuscode_);
}

::google::protobuf::Metadata cmMCode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[1]);
}
// ===================================================================

class srvRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<srvRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(srvRequest, _impl_._has_bits_);
  static void set_has_requestbody(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

srvRequest::srvRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:autopapi.srvRequest)
}
inline PROTOBUF_NDEBUG_INLINE srvRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        clientuid_(arena, from.clientuid_),
        requestbody_(arena, from.requestbody_) {}

srvRequest::srvRequest(
    ::google::protobuf::Arena* arena,
    const srvRequest& from)
    : ::google::protobuf::Message(arena) {
  srvRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, msgtype_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, msgtype_),
           offsetof(Impl_, requestno_) -
               offsetof(Impl_, msgtype_) +
               sizeof(Impl_::requestno_));

  // @@protoc_insertion_point(copy_constructor:autopapi.srvRequest)
}
inline PROTOBUF_NDEBUG_INLINE srvRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        clientuid_(arena),
        requestbody_(arena) {}

inline void srvRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, msgtype_),
           0,
           offsetof(Impl_, requestno_) -
               offsetof(Impl_, msgtype_) +
               sizeof(Impl_::requestno_));
}
srvRequest::~srvRequest() {
  // @@protoc_insertion_point(destructor:autopapi.srvRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void srvRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.clientuid_.Destroy();
  _impl_.requestbody_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void srvRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:autopapi.srvRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.clientuid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.requestbody_.ClearNonDefaultToEmpty();
  }
  ::memset(&_impl_.msgtype_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.requestno_) -
      reinterpret_cast<char*>(&_impl_.msgtype_)) + sizeof(_impl_.requestno_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* srvRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 48, 2> srvRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(srvRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_srvRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 requestNo = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(srvRequest, _impl_.requestno_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(srvRequest, _impl_.requestno_)}},
    // string clientUid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(srvRequest, _impl_.clientuid_)}},
    // .autopapi.srvRequestType msgType = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(srvRequest, _impl_.msgtype_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(srvRequest, _impl_.msgtype_)}},
    // optional string requestBody = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(srvRequest, _impl_.requestbody_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string clientUid = 1;
    {PROTOBUF_FIELD_OFFSET(srvRequest, _impl_.clientuid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .autopapi.srvRequestType msgType = 2;
    {PROTOBUF_FIELD_OFFSET(srvRequest, _impl_.msgtype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // optional string requestBody = 3;
    {PROTOBUF_FIELD_OFFSET(srvRequest, _impl_.requestbody_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 requestNo = 4;
    {PROTOBUF_FIELD_OFFSET(srvRequest, _impl_.requestno_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\23\11\0\13\0\0\0\0"
    "autopapi.srvRequest"
    "clientUid"
    "requestBody"
  }},
};

::uint8_t* srvRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:autopapi.srvRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string clientUid = 1;
  if (!this->_internal_clientuid().empty()) {
    const std::string& _s = this->_internal_clientuid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "autopapi.srvRequest.clientUid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .autopapi.srvRequestType msgType = 2;
  if (this->_internal_msgtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_msgtype(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string requestBody = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_requestbody();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "autopapi.srvRequest.requestBody");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // uint32 requestNo = 4;
  if (this->_internal_requestno() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_requestno(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autopapi.srvRequest)
  return target;
}

::size_t srvRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autopapi.srvRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string clientUid = 1;
  if (!this->_internal_clientuid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_clientuid());
  }

  // optional string requestBody = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_requestbody());
  }

  // .autopapi.srvRequestType msgType = 2;
  if (this->_internal_msgtype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_msgtype());
  }

  // uint32 requestNo = 4;
  if (this->_internal_requestno() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_requestno());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData srvRequest::_class_data_ = {
    srvRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* srvRequest::GetClassData() const {
  return &_class_data_;
}

void srvRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<srvRequest*>(&to_msg);
  auto& from = static_cast<const srvRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:autopapi.srvRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_clientuid().empty()) {
    _this->_internal_set_clientuid(from._internal_clientuid());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_requestbody(from._internal_requestbody());
  }
  if (from._internal_msgtype() != 0) {
    _this->_internal_set_msgtype(from._internal_msgtype());
  }
  if (from._internal_requestno() != 0) {
    _this->_internal_set_requestno(from._internal_requestno());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void srvRequest::CopyFrom(const srvRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autopapi.srvRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool srvRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* srvRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void srvRequest::InternalSwap(srvRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.clientuid_, &other->_impl_.clientuid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.requestbody_, &other->_impl_.requestbody_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(srvRequest, _impl_.requestno_)
      + sizeof(srvRequest::_impl_.requestno_)
      - PROTOBUF_FIELD_OFFSET(srvRequest, _impl_.msgtype_)>(
          reinterpret_cast<char*>(&_impl_.msgtype_),
          reinterpret_cast<char*>(&other->_impl_.msgtype_));
}

::google::protobuf::Metadata srvRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[2]);
}
// ===================================================================

class clientResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<clientResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(clientResponse, _impl_._has_bits_);
  static void set_has_msg(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

clientResponse::clientResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:autopapi.clientResponse)
}
inline PROTOBUF_NDEBUG_INLINE clientResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        clientuid_(arena, from.clientuid_),
        msg_(arena, from.msg_) {}

clientResponse::clientResponse(
    ::google::protobuf::Arena* arena,
    const clientResponse& from)
    : ::google::protobuf::Message(arena) {
  clientResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, statuscode_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, statuscode_),
           offsetof(Impl_, requestno_) -
               offsetof(Impl_, statuscode_) +
               sizeof(Impl_::requestno_));

  // @@protoc_insertion_point(copy_constructor:autopapi.clientResponse)
}
inline PROTOBUF_NDEBUG_INLINE clientResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        clientuid_(arena),
        msg_(arena) {}

inline void clientResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, statuscode_),
           0,
           offsetof(Impl_, requestno_) -
               offsetof(Impl_, statuscode_) +
               sizeof(Impl_::requestno_));
}
clientResponse::~clientResponse() {
  // @@protoc_insertion_point(destructor:autopapi.clientResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void clientResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.clientuid_.Destroy();
  _impl_.msg_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void clientResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:autopapi.clientResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.clientuid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.msg_.ClearNonDefaultToEmpty();
  }
  ::memset(&_impl_.statuscode_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.requestno_) -
      reinterpret_cast<char*>(&_impl_.statuscode_)) + sizeof(_impl_.requestno_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* clientResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 44, 2> clientResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(clientResponse, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_clientResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string clientUid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(clientResponse, _impl_.clientuid_)}},
    // uint32 statusCode = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(clientResponse, _impl_.statuscode_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(clientResponse, _impl_.statuscode_)}},
    // .autopapi.clientResponseType msgType = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(clientResponse, _impl_.msgtype_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(clientResponse, _impl_.msgtype_)}},
    // optional string msg = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(clientResponse, _impl_.msg_)}},
    // uint32 requestNo = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(clientResponse, _impl_.requestno_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(clientResponse, _impl_.requestno_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string clientUid = 1;
    {PROTOBUF_FIELD_OFFSET(clientResponse, _impl_.clientuid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 statusCode = 2;
    {PROTOBUF_FIELD_OFFSET(clientResponse, _impl_.statuscode_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .autopapi.clientResponseType msgType = 3;
    {PROTOBUF_FIELD_OFFSET(clientResponse, _impl_.msgtype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // optional string msg = 4;
    {PROTOBUF_FIELD_OFFSET(clientResponse, _impl_.msg_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 requestNo = 5;
    {PROTOBUF_FIELD_OFFSET(clientResponse, _impl_.requestno_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\27\11\0\0\3\0\0\0"
    "autopapi.clientResponse"
    "clientUid"
    "msg"
  }},
};

::uint8_t* clientResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:autopapi.clientResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string clientUid = 1;
  if (!this->_internal_clientuid().empty()) {
    const std::string& _s = this->_internal_clientuid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "autopapi.clientResponse.clientUid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint32 statusCode = 2;
  if (this->_internal_statuscode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_statuscode(), target);
  }

  // .autopapi.clientResponseType msgType = 3;
  if (this->_internal_msgtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_msgtype(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string msg = 4;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_msg();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "autopapi.clientResponse.msg");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // uint32 requestNo = 5;
  if (this->_internal_requestno() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_requestno(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autopapi.clientResponse)
  return target;
}

::size_t clientResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autopapi.clientResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string clientUid = 1;
  if (!this->_internal_clientuid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_clientuid());
  }

  // optional string msg = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_msg());
  }

  // uint32 statusCode = 2;
  if (this->_internal_statuscode() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_statuscode());
  }

  // .autopapi.clientResponseType msgType = 3;
  if (this->_internal_msgtype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_msgtype());
  }

  // uint32 requestNo = 5;
  if (this->_internal_requestno() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_requestno());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData clientResponse::_class_data_ = {
    clientResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* clientResponse::GetClassData() const {
  return &_class_data_;
}

void clientResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<clientResponse*>(&to_msg);
  auto& from = static_cast<const clientResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:autopapi.clientResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_clientuid().empty()) {
    _this->_internal_set_clientuid(from._internal_clientuid());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_msg(from._internal_msg());
  }
  if (from._internal_statuscode() != 0) {
    _this->_internal_set_statuscode(from._internal_statuscode());
  }
  if (from._internal_msgtype() != 0) {
    _this->_internal_set_msgtype(from._internal_msgtype());
  }
  if (from._internal_requestno() != 0) {
    _this->_internal_set_requestno(from._internal_requestno());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void clientResponse::CopyFrom(const clientResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autopapi.clientResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool clientResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* clientResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void clientResponse::InternalSwap(clientResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.clientuid_, &other->_impl_.clientuid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_, &other->_impl_.msg_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(clientResponse, _impl_.requestno_)
      + sizeof(clientResponse::_impl_.requestno_)
      - PROTOBUF_FIELD_OFFSET(clientResponse, _impl_.statuscode_)>(
          reinterpret_cast<char*>(&_impl_.statuscode_),
          reinterpret_cast<char*>(&other->_impl_.statuscode_));
}

::google::protobuf::Metadata clientResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[3]);
}
// ===================================================================

class clientUid::_Internal {
 public:
};

clientUid::clientUid(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:autopapi.clientUid)
}
inline PROTOBUF_NDEBUG_INLINE clientUid::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : uid_(arena, from.uid_),
        _cached_size_{0} {}

clientUid::clientUid(
    ::google::protobuf::Arena* arena,
    const clientUid& from)
    : ::google::protobuf::Message(arena) {
  clientUid* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:autopapi.clientUid)
}
inline PROTOBUF_NDEBUG_INLINE clientUid::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : uid_(arena),
        _cached_size_{0} {}

inline void clientUid::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
clientUid::~clientUid() {
  // @@protoc_insertion_point(destructor:autopapi.clientUid)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void clientUid::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.uid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void clientUid::Clear() {
// @@protoc_insertion_point(message_clear_start:autopapi.clientUid)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uid_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* clientUid::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 30, 2> clientUid::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_clientUid_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string uid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(clientUid, _impl_.uid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string uid = 1;
    {PROTOBUF_FIELD_OFFSET(clientUid, _impl_.uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\22\3\0\0\0\0\0\0"
    "autopapi.clientUid"
    "uid"
  }},
};

::uint8_t* clientUid::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:autopapi.clientUid)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string uid = 1;
  if (!this->_internal_uid().empty()) {
    const std::string& _s = this->_internal_uid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "autopapi.clientUid.uid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autopapi.clientUid)
  return target;
}

::size_t clientUid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autopapi.clientUid)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uid = 1;
  if (!this->_internal_uid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_uid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData clientUid::_class_data_ = {
    clientUid::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* clientUid::GetClassData() const {
  return &_class_data_;
}

void clientUid::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<clientUid*>(&to_msg);
  auto& from = static_cast<const clientUid&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:autopapi.clientUid)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uid().empty()) {
    _this->_internal_set_uid(from._internal_uid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void clientUid::CopyFrom(const clientUid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autopapi.clientUid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool clientUid::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* clientUid::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void clientUid::InternalSwap(clientUid* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uid_, &other->_impl_.uid_, arena);
}

::google::protobuf::Metadata clientUid::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[4]);
}
// ===================================================================

class msmtSettings::_Internal {
 public:
};

msmtSettings::msmtSettings(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:autopapi.msmtSettings)
}
inline PROTOBUF_NDEBUG_INLINE msmtSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : clientuid_(arena, from.clientuid_),
        ppdevice_(arena, from.ppdevice_),
        ppsamplinginterval_(arena, from.ppsamplinginterval_),
        _cached_size_{0} {}

msmtSettings::msmtSettings(
    ::google::protobuf::Arena* arena,
    const msmtSettings& from)
    : ::google::protobuf::Message(arena) {
  msmtSettings* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.uploadintervalmin_ = from._impl_.uploadintervalmin_;

  // @@protoc_insertion_point(copy_constructor:autopapi.msmtSettings)
}
inline PROTOBUF_NDEBUG_INLINE msmtSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : clientuid_(arena),
        ppdevice_(arena),
        ppsamplinginterval_(arena),
        _cached_size_{0} {}

inline void msmtSettings::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.uploadintervalmin_ = {};
}
msmtSettings::~msmtSettings() {
  // @@protoc_insertion_point(destructor:autopapi.msmtSettings)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void msmtSettings::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.clientuid_.Destroy();
  _impl_.ppdevice_.Destroy();
  _impl_.ppsamplinginterval_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void msmtSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:autopapi.msmtSettings)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.clientuid_.ClearToEmpty();
  _impl_.ppdevice_.ClearToEmpty();
  _impl_.ppsamplinginterval_.ClearToEmpty();
  _impl_.uploadintervalmin_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* msmtSettings::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 0, 65, 2> msmtSettings::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967266,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_msmtSettings_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string clientUid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(msmtSettings, _impl_.clientuid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string ppDevice = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(msmtSettings, _impl_.ppdevice_)}},
    // string ppSamplingInterval = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(msmtSettings, _impl_.ppsamplinginterval_)}},
    // uint32 uploadIntervalMin = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(msmtSettings, _impl_.uploadintervalmin_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(msmtSettings, _impl_.uploadintervalmin_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string clientUid = 1;
    {PROTOBUF_FIELD_OFFSET(msmtSettings, _impl_.clientuid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ppDevice = 3;
    {PROTOBUF_FIELD_OFFSET(msmtSettings, _impl_.ppdevice_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ppSamplingInterval = 4;
    {PROTOBUF_FIELD_OFFSET(msmtSettings, _impl_.ppsamplinginterval_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 uploadIntervalMin = 5;
    {PROTOBUF_FIELD_OFFSET(msmtSettings, _impl_.uploadintervalmin_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\25\11\10\22\0\0\0\0"
    "autopapi.msmtSettings"
    "clientUid"
    "ppDevice"
    "ppSamplingInterval"
  }},
};

::uint8_t* msmtSettings::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:autopapi.msmtSettings)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string clientUid = 1;
  if (!this->_internal_clientuid().empty()) {
    const std::string& _s = this->_internal_clientuid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "autopapi.msmtSettings.clientUid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string ppDevice = 3;
  if (!this->_internal_ppdevice().empty()) {
    const std::string& _s = this->_internal_ppdevice();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "autopapi.msmtSettings.ppDevice");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string ppSamplingInterval = 4;
  if (!this->_internal_ppsamplinginterval().empty()) {
    const std::string& _s = this->_internal_ppsamplinginterval();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "autopapi.msmtSettings.ppSamplingInterval");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // uint32 uploadIntervalMin = 5;
  if (this->_internal_uploadintervalmin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_uploadintervalmin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autopapi.msmtSettings)
  return target;
}

::size_t msmtSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autopapi.msmtSettings)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string clientUid = 1;
  if (!this->_internal_clientuid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_clientuid());
  }

  // string ppDevice = 3;
  if (!this->_internal_ppdevice().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ppdevice());
  }

  // string ppSamplingInterval = 4;
  if (!this->_internal_ppsamplinginterval().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ppsamplinginterval());
  }

  // uint32 uploadIntervalMin = 5;
  if (this->_internal_uploadintervalmin() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_uploadintervalmin());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData msmtSettings::_class_data_ = {
    msmtSettings::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* msmtSettings::GetClassData() const {
  return &_class_data_;
}

void msmtSettings::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<msmtSettings*>(&to_msg);
  auto& from = static_cast<const msmtSettings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:autopapi.msmtSettings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_clientuid().empty()) {
    _this->_internal_set_clientuid(from._internal_clientuid());
  }
  if (!from._internal_ppdevice().empty()) {
    _this->_internal_set_ppdevice(from._internal_ppdevice());
  }
  if (!from._internal_ppsamplinginterval().empty()) {
    _this->_internal_set_ppsamplinginterval(from._internal_ppsamplinginterval());
  }
  if (from._internal_uploadintervalmin() != 0) {
    _this->_internal_set_uploadintervalmin(from._internal_uploadintervalmin());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void msmtSettings::CopyFrom(const msmtSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autopapi.msmtSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool msmtSettings::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* msmtSettings::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void msmtSettings::InternalSwap(msmtSettings* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.clientuid_, &other->_impl_.clientuid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ppdevice_, &other->_impl_.ppdevice_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ppsamplinginterval_, &other->_impl_.ppsamplinginterval_, arena);
        swap(_impl_.uploadintervalmin_, other->_impl_.uploadintervalmin_);
}

::google::protobuf::Metadata msmtSettings::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[5]);
}
// ===================================================================

class msmtSample::_Internal {
 public:
  using HasBits = decltype(std::declval<msmtSample>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(msmtSample, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& msmttime(const msmtSample* msg);
  static void set_has_msmttime(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& msmtSample::_Internal::msmttime(const msmtSample* msg) {
  return *msg->_impl_.msmttime_;
}
void msmtSample::clear_msmttime() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.msmttime_ != nullptr) _impl_.msmttime_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
msmtSample::msmtSample(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:autopapi.msmtSample)
}
inline PROTOBUF_NDEBUG_INLINE msmtSample::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        clientuid_(arena, from.clientuid_),
        msmtid_(arena, from.msmtid_) {}

msmtSample::msmtSample(
    ::google::protobuf::Arena* arena,
    const msmtSample& from)
    : ::google::protobuf::Message(arena) {
  msmtSample* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.msmttime_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.msmttime_)
                : nullptr;
  _impl_.msmtcontent_ = from._impl_.msmtcontent_;

  // @@protoc_insertion_point(copy_constructor:autopapi.msmtSample)
}
inline PROTOBUF_NDEBUG_INLINE msmtSample::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        clientuid_(arena),
        msmtid_(arena) {}

inline void msmtSample::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, msmttime_),
           0,
           offsetof(Impl_, msmtcontent_) -
               offsetof(Impl_, msmttime_) +
               sizeof(Impl_::msmtcontent_));
}
msmtSample::~msmtSample() {
  // @@protoc_insertion_point(destructor:autopapi.msmtSample)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void msmtSample::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.clientuid_.Destroy();
  _impl_.msmtid_.Destroy();
  delete _impl_.msmttime_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void msmtSample::Clear() {
// @@protoc_insertion_point(message_clear_start:autopapi.msmtSample)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.clientuid_.ClearToEmpty();
  _impl_.msmtid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.msmttime_ != nullptr);
    _impl_.msmttime_->Clear();
  }
  _impl_.msmtcontent_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* msmtSample::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 43, 2> msmtSample::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(msmtSample, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_msmtSample_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 msmtContent = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(msmtSample, _impl_.msmtcontent_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(msmtSample, _impl_.msmtcontent_)}},
    // string clientUid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(msmtSample, _impl_.clientuid_)}},
    // string msmtId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(msmtSample, _impl_.msmtid_)}},
    // .google.protobuf.Timestamp msmtTime = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(msmtSample, _impl_.msmttime_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string clientUid = 1;
    {PROTOBUF_FIELD_OFFSET(msmtSample, _impl_.clientuid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string msmtId = 2;
    {PROTOBUF_FIELD_OFFSET(msmtSample, _impl_.msmtid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp msmtTime = 3;
    {PROTOBUF_FIELD_OFFSET(msmtSample, _impl_.msmttime_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 msmtContent = 4;
    {PROTOBUF_FIELD_OFFSET(msmtSample, _impl_.msmtcontent_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\23\11\6\0\0\0\0\0"
    "autopapi.msmtSample"
    "clientUid"
    "msmtId"
  }},
};

::uint8_t* msmtSample::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:autopapi.msmtSample)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string clientUid = 1;
  if (!this->_internal_clientuid().empty()) {
    const std::string& _s = this->_internal_clientuid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "autopapi.msmtSample.clientUid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string msmtId = 2;
  if (!this->_internal_msmtid().empty()) {
    const std::string& _s = this->_internal_msmtid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "autopapi.msmtSample.msmtId");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp msmtTime = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::msmttime(this),
        _Internal::msmttime(this).GetCachedSize(), target, stream);
  }

  // uint32 msmtContent = 4;
  if (this->_internal_msmtcontent() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_msmtcontent(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autopapi.msmtSample)
  return target;
}

::size_t msmtSample::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autopapi.msmtSample)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string clientUid = 1;
  if (!this->_internal_clientuid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_clientuid());
  }

  // string msmtId = 2;
  if (!this->_internal_msmtid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_msmtid());
  }

  // .google.protobuf.Timestamp msmtTime = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msmttime_);
  }

  // uint32 msmtContent = 4;
  if (this->_internal_msmtcontent() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_msmtcontent());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData msmtSample::_class_data_ = {
    msmtSample::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* msmtSample::GetClassData() const {
  return &_class_data_;
}

void msmtSample::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<msmtSample*>(&to_msg);
  auto& from = static_cast<const msmtSample&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:autopapi.msmtSample)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_clientuid().empty()) {
    _this->_internal_set_clientuid(from._internal_clientuid());
  }
  if (!from._internal_msmtid().empty()) {
    _this->_internal_set_msmtid(from._internal_msmtid());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_msmttime()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_msmttime());
  }
  if (from._internal_msmtcontent() != 0) {
    _this->_internal_set_msmtcontent(from._internal_msmtcontent());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void msmtSample::CopyFrom(const msmtSample& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autopapi.msmtSample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool msmtSample::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* msmtSample::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void msmtSample::InternalSwap(msmtSample* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.clientuid_, &other->_impl_.clientuid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msmtid_, &other->_impl_.msmtid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(msmtSample, _impl_.msmtcontent_)
      + sizeof(msmtSample::_impl_.msmtcontent_)
      - PROTOBUF_FIELD_OFFSET(msmtSample, _impl_.msmttime_)>(
          reinterpret_cast<char*>(&_impl_.msmttime_),
          reinterpret_cast<char*>(&other->_impl_.msmttime_));
}

::google::protobuf::Metadata msmtSample::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[6]);
}
// ===================================================================

class msmtName::_Internal {
 public:
};

msmtName::msmtName(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:autopapi.msmtName)
}
inline PROTOBUF_NDEBUG_INLINE msmtName::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : clientuid_(arena, from.clientuid_),
        name_(arena, from.name_),
        _cached_size_{0} {}

msmtName::msmtName(
    ::google::protobuf::Arena* arena,
    const msmtName& from)
    : ::google::protobuf::Message(arena) {
  msmtName* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:autopapi.msmtName)
}
inline PROTOBUF_NDEBUG_INLINE msmtName::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : clientuid_(arena),
        name_(arena),
        _cached_size_{0} {}

inline void msmtName::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
msmtName::~msmtName() {
  // @@protoc_insertion_point(destructor:autopapi.msmtName)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void msmtName::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.clientuid_.Destroy();
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void msmtName::Clear() {
// @@protoc_insertion_point(message_clear_start:autopapi.msmtName)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.clientuid_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* msmtName::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 39, 2> msmtName::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_msmtName_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(msmtName, _impl_.name_)}},
    // string clientUid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(msmtName, _impl_.clientuid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string clientUid = 1;
    {PROTOBUF_FIELD_OFFSET(msmtName, _impl_.clientuid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(msmtName, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\21\11\4\0\0\0\0\0"
    "autopapi.msmtName"
    "clientUid"
    "name"
  }},
};

::uint8_t* msmtName::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:autopapi.msmtName)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string clientUid = 1;
  if (!this->_internal_clientuid().empty()) {
    const std::string& _s = this->_internal_clientuid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "autopapi.msmtName.clientUid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "autopapi.msmtName.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autopapi.msmtName)
  return target;
}

::size_t msmtName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autopapi.msmtName)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string clientUid = 1;
  if (!this->_internal_clientuid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_clientuid());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData msmtName::_class_data_ = {
    msmtName::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* msmtName::GetClassData() const {
  return &_class_data_;
}

void msmtName::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<msmtName*>(&to_msg);
  auto& from = static_cast<const msmtName&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:autopapi.msmtName)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_clientuid().empty()) {
    _this->_internal_set_clientuid(from._internal_clientuid());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void msmtName::CopyFrom(const msmtName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autopapi.msmtName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool msmtName::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* msmtName::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void msmtName::InternalSwap(msmtName* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.clientuid_, &other->_impl_.clientuid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata msmtName::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[7]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace autopapi
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
