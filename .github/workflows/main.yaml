name: CI Client builder
on: [workflow_dispatch, push]
jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v3
    - name: Setup system
      run:  sudo apt update && sudo apt install -y libssl-dev sudo cmake git build-essential autoconf libtool pkg-config libjsoncpp-dev libpqxx-dev libc6
    - name: Setup arm cross compillation dependencies
      run: sudo dpkg --add-architecture arm64 && sudo apt install -y libssl-dev:arm64 libjsoncpp-dev:arm64 libpqxx-dev:arm64 libc6:arm64
    - name: Clone grpc
      run: git clone --recurse-submodules -b v1.64.2 --depth 1 --shallow-submodules https://github.com/grpc/grpc
    - name: Build grpc natively
      run: |
            # see https://github.com/grpc/grpc/blob/master/test/distrib/cpp/run_distrib_test_cmake_aarch64_cross.sh
            cd grpc
            mkdir -p cmake/build
            pushd cmake/build
            cmake -DgRPC_INSTALL=ON \
              -DgRPC_BUILD_TESTS=OFF \
              -DCMAKE_INSTALL_PREFIX=$MY_INSTALL_DIR \
              ../..
            make -j 2
            make install
            popd
    - name: Create toolchain
      run: |
          cat > /tmp/toolchain.cmake <<'EOT'
          SET(CMAKE_SYSTEM_NAME Linux)
          SET(CMAKE_SYSTEM_PROCESSOR aarch64)
          set(CMAKE_STAGING_PREFIX /tmp/stage)
          set(CMAKE_C_COMPILER /usr/bin/aarch64-linux-gnu-gcc-8)
          set(CMAKE_CXX_COMPILER /usr/bin/aarch64-linux-gnu-g++-8)
          set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
          set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
          set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
          set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
          EOT

          mkdir -p "cmake/build_arm"
          pushd "cmake/build_arm"
          cmake -DCMAKE_TOOLCHAIN_FILE=/tmp/toolchain.cmake \
                -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_INSTALL_PREFIX=/tmp/install \
                ../..
          make -j 2 install
          popd
    - name: Build app
      run: |
          cd client/
          pwd
          ls
          mkdir -p cmake/build
          cd cmake/build
          cmake ../..
          make -j 2
    - name: Upload binary release file
      uses: actions/upload-artifact@v3
      with:
        name: Release
        path: cmake/build/client
